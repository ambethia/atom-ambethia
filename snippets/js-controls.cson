'.source.js':

  'if':
    prefix: 'if'
    body: 'if (${1:condition}) {\n  ${2}\n}'

  'else':
    prefix: 'el'
    body: 'else {\n  ${2}\n}'

  'if/else':
    prefix: 'ife'
    body: '''
      if (${1:condition}) {
        ${2}
      } else {
        ${3}
      }
    '''

  'else if':
    prefix: 'ei'
    body: 'else if (${1:condition}) {\n  ${2}\n}'

  'for':
    prefix: ['for', 'fl']
    body: 'for (let ${1:i} = 0; ${1:i} < ${2:iterable}${3:.length}; ${1:i}++) {\n  ${4}\n}'

  'for in':
    prefix: 'fi'
    body: '''
      for (let ${1:key} in ${2:source}) {
        if (${2:source}.hasOwnProperty(${1:key})) {
          ${3}
        }
      }
    '''

  'for of':
    prefix: 'fo'
    body: 'for (let ${1:key} of ${2:source}) {\n  ${3}\n}'

  'while':
    prefix: ['while', 'wl']
    body: 'while (${1:condition}) {\n  ${2}\n}'

  'switch':
    prefix: ['switch', 'sw']
    body: '''
      switch (${1:expression}) {
        case ${2:value}:
          ${3}
          break
        default:
          break
      }
    '''

  'case':
    prefix: ['case', 'ca']
    body: '''
      case ${1:value}:
        ${2}
        break
    '''

  'try/catch':
    prefix: 'tc'
    body: '''
      try {
        ${1}
      } catch (${2:err}) {
        ${3}
      }
    '''

  'try/finally':
    prefix: 'tf'
    body: '''
      try {
        ${1}
      } finally {
        ${2}
      }
    '''

  'try/catch/finally':
    prefix: 'tcf'
    body: '''
      try {
        ${1}
      } catch (${2:err}) {
        ${3}
      } finally {
        ${4}
      }
    '''

'.source.js':

  'forEach loop':
    prefix: 'fe'
    body: '${1:iterable}.forEach((${2:item}) => {\n  ${0}\n})'

  'forEach chained':
    prefix: '.fe'
    body: '.forEach((${1:item}) => {${0}})'

  'map':
    prefix: 'map'
    body: '${1:iterable}.map((${2:item}) => {\n  ${0}\n})'

  'map chained':
    prefix: '.map'
    body: '.map((${1:item}) => {${0}})'

  'reduce':
    prefix: 'reduce'
    body: '${1:iterable}.reduce((${2:p}, ${3:c}) => {\n  ${0}\n}${4:, initial})'

  'reduce chained':
    prefix: '.reduce'
    body: '.reduce((${1:p}, ${2:c}) => {${0}}${4:, initial})'

  'filter':
    prefix: 'filter'
    body: '${1:iterable}.filter((${2:item}) => {\n  ${0}\n})'

  'filter chained':
    prefix: '.filter'
    body: '.filter((${1:item}) => {${0}})'

  'find':
    prefix: 'find'
    body: '${1:iterable}.find((${2:item}) => {\n  ${0}\n})'

  'find chained':
    prefix: '.find'
    body: '.find((${1:item}) => {${0}})'
